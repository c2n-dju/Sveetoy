
/*
 * Default component settings
 */
////
/// @group spaces
////


/// Map of available breakpoints for space features, usually mapped on
/// Foundation ones.
///
/// Each property is a breakpoint.
///
/// @type map
///
/// @example scss
///   $sveetoy-breakpoints: (
///       small: $small-up,
///       medium: $medium-up,
///       large: $large-up,
///       xlarge: $xlarge-up,
///   );
///
$sveetoy-breakpoints: () !default;


///
/// Includes properties to apply vertical/horizontal spacing on an
/// element for various breakpoints
///
/// @arg {Map} $definitions [null]
///   space sizes map which define at least the keyword name from '$default'.
///
/// @arg {String} $axis [vertical]
///   axis to apply spaces, can ben either 'horizontal' or 'vertical'.
///
/// @arg {String} $default [small]
///   Breakpoint name to use as as default class spacing. Won't be included in
///   media queries.
///
/// @arg {List} $sides [("start", "end")]
///   Sides to apply spacing depending from $axis, 'start' means 'top' or
///   'left' and 'end' means 'right' or 'bottom'. Both sides are enabled by
///   default.
///
/// @arg {String} $prop [padding]
///   Property name to define, default is 'padding' but it can be 'margin' also.
///
@mixin sveetoy-apply-spaces($definitions, $axis: "vertical", $default: "small",
                            $sides: ("start", "end"), $prop: "padding") {
    $space-start: top;
    $space-end: bottom;
    @if $axis == "horizontal" {
        $space-start: left;
        $space-end: right;
    }

    @if $definitions != null {
        @if map-get($definitions, $default) == null {
            @error "Given space definition must contain at least the '#{$default}' key";
        }

        // Default size comes from 'small'
        @if index($sides, "start"){
            #{$prop}-#{$space-start}: map-get($definitions, $default);
        }
        @if index($sides, "end"){
            #{$prop}-#{$space-end}: map-get($definitions, $default);
        }

        // Breakpoints
        @each $name, $size in $definitions {
            // Ignore default size, also dont try to use an unknowed breakpoint
            @if $name != $default and map-get($sveetoy-breakpoints, $name){
                @media #{map-get($sveetoy-breakpoints, $name)} {
                    @if index($sides, "start"){
                        #{$prop}-#{$space-start}: $size;
                    }
                    @if index($sides, "end"){
                        #{$prop}-#{$space-end}: $size;
                    }
                }
            }
        }
    }
}
