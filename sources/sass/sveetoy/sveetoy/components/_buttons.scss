@import "../mixins/colors";

/*
 * Button enhancements
 */
$include-sveetoy-buttons: $include-sveetoy-classes !default;

// Depends from foundation variables, default should be empty or fixed value
$sveetoy-button-modests: (
    tiny: $button-tny / 2,
    small: $button-sml / 2,
    medium: $button-med / 2,
    large: $button-lrg / 2,
) !default;

@if $include-sveetoy-buttons {
    button,
    .button{
        ///
        /// Explicitely remove all button margins
        ///
        &.unmarged {
            margin: 0;
        }

        ///
        /// Make stronger button
        ///
        &.strong{
            font-weight: bold;
            text-transform: uppercase;
        }

        ///
        /// Fullwidth (like '.expand' but keeping padding)
        ///
        &.full {
            width: 100%;
        }

        ///
        /// Modest padding
        ///
        &.modest{
            $default-padding: map-get($sveetoy-button-modests, "medium");
            padding: $default-padding ($default-padding * 2) $default-padding ($default-padding * 2);

            @each $name, $padding in $sveetoy-button-modests{
                &.#{$name}{
                    padding: $padding ($padding * 2) $padding ($padding * 2);
                }
            }
        }

        ///
        /// Various color variants from color schemes
        ///
        @each $name, $scheme in $sveetoy-button-colors-schemes{
            &.#{$name}{
                @include sveetoy-button-colors($scheme);
            }
        }
    }

    ///
    /// Disable bottom margin for last element
    ///
    div, p, dd, li{
        button, .button{
            &:last-child{
                margin-bottom: 0;
            }
        }
    }
}